Diferencias de tipado:

Explícito: Lo ves en el código
Implícito: Lo sabes luego de ver o leer el código


//-----------------------------
//TIPADO DE DATOS CON REACT Y TS
//-----------------------------

//Implícito
const sum = (a, b)=>{
    return a + b;
}
//Explícito
const sum = (a:number, b:number):number=>{
    return a + b;
}
//Import de los tipos
import type { FunctionComponent, FC } from "react"
//Con tipos en react
const RandomFox : FunctionComponent = ()=>{
    return (
        <h1>Hola</h1>
    )
}
//Con abreviación
const RandomFox : FC = ()=>{
    return (
        <h1>Hola</h1>
    )
}

//-----------------------------
//FIN TIPADO DE DATOS CON REACT Y TS
//-----------------------------



//-----------------------------
//TIPADO DE HOOKS
//-----------------------------

//Se debe indicar el tipo de dato que se recive en nuestro estado, en este caso es un array de números
const [ test, setTest ] = useState<number[]>([1,2,3,4]);

//También debemos añadir "use client" en next.js para que funcionen los hooks de cara al cliente



//-----------------------------
//ESTANDARES
//-----------------------------

//Al definir un tipo con typescript, este debe comenzar con letra mayúscula, en este caso estamos definiendo un tipo ImageItem que tiene un objeto el cual tiene los parametros "id" y "url"

type ImageItem = { id:string, url:string }

const [ image, setImage ] = useState<Array<ImageItem>>([
    {id:"1", url: "https://image.com"}
    {id:"1", url: "https://image.com"}
]);